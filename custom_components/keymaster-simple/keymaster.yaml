# yamllint disable
############  input_number:  #####################
input_number:
  accesscount_LOCKNAME_TEMPLATENUM:
    name: "Unlock events"
    min: 0
    max: 100
    step: 1
    mode: box

####################  input_text:  ###############
input_text:
  LOCKNAME_name_TEMPLATENUM:
    name: "Name"
  LOCKNAME_pin_TEMPLATENUM:
    name: "PIN"
    mode: HIDE_PINS

#################  input_boolean: ################
input_boolean:
  notify_LOCKNAME_TEMPLATENUM:
    name: "Notifications"
  enabled_LOCKNAME_TEMPLATENUM:
    name: "Enabled"
  reset_codeslot_LOCKNAME_TEMPLATENUM:
    name: "Reset Code Slot"

################  automation: #################
automation:
  - alias: keymaster_synchronize_codeslot_LOCKNAME_TEMPLATENUM
    id: keymaster_synchronize_codeslot_LOCKNAME_TEMPLATENUM
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.pin_synched_LOCKNAME_TEMPLATENUM"
        from: "on"
        to: "off"
    condition:
      - condition: template
        value_template: >-
          {{ states("sensor.LOCKNAME_code_slot_TEMPLATENUM") != "unavailable" }}
    action:
      - choose:
          # The code should be added to the lock's slot
          - conditions:
              - condition: template
                value_template: "{{ is_state('binary_sensor.active_LOCKNAME_TEMPLATENUM','on') }}"
            sequence:
              - service: keymaster-simple.add_code
                data_template:
                  entity_id: LOCKENTITYNAME
                  code_slot: >-
                    {{ TEMPLATENUM }}
                  usercode: >-
                    {{ states('input_text.LOCKNAME_pin_TEMPLATENUM').strip() }}

          # The code should be removed from the lock's slot
          - conditions:
              - condition: template
                value_template: "{{ is_state('binary_sensor.active_LOCKNAME_TEMPLATENUM','off') }}"
            sequence:
              - service: keymaster-simple.clear_code
                data_template:
                  entity_id: LOCKENTITYNAME
                  code_slot: >-
                    {{ TEMPLATENUM }}

################  binary_sensor: #################
binary_sensor:
  - platform: template
    sensors:
      active_LOCKNAME_TEMPLATENUM:
        friendly_name: "Desired PIN State"
        value_template: >-
          {## This template checks whether the PIN should be considered active based on ##}
          {## all of the different ways the PIN can be conditionally enabled/disabled ##}

          {## Get whether code slot is active and current day is enabled ##}
          {% set is_slot_enabled = is_state('input_boolean.enabled_LOCKNAME_TEMPLATENUM', 'on') %}

          {## Code slot is active if slot is enabled + current day is enabled + date range is not enabled or current date is within date range ##}
          {## + time range is not enabled or current time is within time range (based on include/exclude) + access limit is not enabled or there are more access counts left ##}
          {{
            is_slot_enabled
          }}

      pin_synched_LOCKNAME_TEMPLATENUM:
        friendly_name: "PIN synchronized with lock"
        value_template: >
          {% set lockpin = states('sensor.LOCKNAME_code_slot_TEMPLATENUM').strip()  %}
          {% set localpin = states('input_text.LOCKNAME_pin_TEMPLATENUM').strip()  %}
          {% set pin_active = is_state('binary_sensor.active_LOCKNAME_TEMPLATENUM', 'on')  %}
          {% if lockpin == "0000" %}
          {%   set lockpin = "" %}
          {% endif %}
          {% if pin_active %}
            {{ localpin == lockpin }}
          {% else %}
            {{ lockpin == "" }}
          {% endif %}

###################  sensor:  ####################
sensor:
  - platform: template
    sensors:
      connected_LOCKNAME_TEMPLATENUM:
        friendly_name: "PIN Status"
        value_template: >-
          {% set pin_active = is_state('binary_sensor.active_LOCKNAME_TEMPLATENUM', 'on')  %}      
          {% set synched = is_state('binary_sensor.pin_synched_LOCKNAME_TEMPLATENUM', 'on')  %}      
          {% if pin_active %}
            {% if synched %}
              Connected
            {% else %}
              Adding
            {% endif %}
          {% else %}
            {% if synched %}
              Disconnected
            {% else %}
              Deleting
            {% endif %}
          {% endif %}
        icon_template: >
          {% set pin_active = is_state('binary_sensor.active_LOCKNAME_TEMPLATENUM', 'on')  %}      
          {% set synched = is_state('binary_sensor.pin_synched_LOCKNAME_TEMPLATENUM', 'on')  %}      
          {% if pin_active %}
            {% if synched %}
              mdi:folder-key
            {% else %}
              mdi:folder-key-network
            {% endif %}
          {% else %}
            {% if synched %}
              mdi:folder-open
            {% else %}
              mdi:wiper-wash
            {% endif %}
          {% endif %}
